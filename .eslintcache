[{"C:\\Users\\jakub\\Desktop\\Projekty\\React\\admin_panel\\src\\index.js":"1","C:\\Users\\jakub\\Desktop\\Projekty\\React\\admin_panel\\src\\reportWebVitals.js":"2","C:\\Users\\jakub\\Desktop\\Projekty\\React\\admin_panel\\src\\store\\index.js":"3","C:\\Users\\jakub\\Desktop\\Projekty\\React\\admin_panel\\src\\reducers\\reducer.js":"4","C:\\Users\\jakub\\Desktop\\Projekty\\React\\admin_panel\\src\\root\\Root.js":"5","C:\\Users\\jakub\\Desktop\\Projekty\\React\\admin_panel\\src\\routing\\index.js":"6","C:\\Users\\jakub\\Desktop\\Projekty\\React\\admin_panel\\src\\actions\\actionTypes.js":"7","C:\\Users\\jakub\\Desktop\\Projekty\\React\\admin_panel\\src\\actions\\index.js":"8","C:\\Users\\jakub\\Desktop\\Projekty\\React\\admin_panel\\src\\components\\OrdersTable.js":"9","C:\\Users\\jakub\\Desktop\\Projekty\\React\\admin_panel\\src\\components\\nav\\NavBar.js":"10","C:\\Users\\jakub\\Desktop\\Projekty\\React\\admin_panel\\src\\components\\AddProductForm.js":"11","C:\\Users\\jakub\\Desktop\\Projekty\\React\\admin_panel\\src\\data\\index.js":"12","C:\\Users\\jakub\\Desktop\\Projekty\\React\\admin_panel\\src\\components\\Modal.js":"13","C:\\Users\\jakub\\Desktop\\Projekty\\React\\admin_panel\\src\\components\\EditOrder.js":"14","C:\\Users\\jakub\\Desktop\\Projekty\\React\\admin_panel\\src\\views\\AddOrder.js":"15","C:\\Users\\jakub\\Desktop\\Projekty\\React\\admin_panel\\src\\components\\OrderForm.js":"16","C:\\Users\\jakub\\Desktop\\Projekty\\React\\admin_panel\\src\\components\\productsComponents\\DisplayProductsOrder.js":"17","C:\\Users\\jakub\\Desktop\\Projekty\\React\\admin_panel\\src\\components\\productsComponents\\EditProductKeyForm.js":"18","C:\\Users\\jakub\\Desktop\\Projekty\\React\\admin_panel\\src\\theme\\GlobalStyle.js":"19","C:\\Users\\jakub\\Desktop\\Projekty\\React\\admin_panel\\src\\views\\Orders.js":"20","C:\\Users\\jakub\\Desktop\\Projekty\\React\\admin_panel\\src\\firebase\\firestoreUtils.js":"21","C:\\Users\\jakub\\Desktop\\Projekty\\React\\admin_panel\\src\\firebase\\firebaseConfig.js":"22","C:\\Users\\jakub\\Desktop\\Projekty\\React\\admin_panel\\src\\components\\EditOrderForm.js":"23","C:\\Users\\jakub\\Desktop\\Projekty\\React\\admin_panel\\src\\routes\\index.js":"24","C:\\Users\\jakub\\Desktop\\Projekty\\React\\admin_panel\\src\\templates\\LoggedUserTemplate.js":"25","C:\\Users\\jakub\\Desktop\\Projekty\\React\\admin_panel\\src\\templates\\UnloggedUserTemplate.js":"26","C:\\Users\\jakub\\Desktop\\Projekty\\React\\admin_panel\\src\\views\\RegisterPage.js":"27","C:\\Users\\jakub\\Desktop\\Projekty\\React\\admin_panel\\src\\views\\LoginPage.js":"28","C:\\Users\\jakub\\Desktop\\Projekty\\React\\admin_panel\\src\\components\\RegisterLoginForm.js":"29","C:\\Users\\jakub\\Desktop\\Projekty\\React\\admin_panel\\src\\hoc\\withRedirect.js":"30"},{"size":390,"mtime":1615497775094,"results":"31","hashOfConfig":"32"},{"size":362,"mtime":499162500000,"results":"33","hashOfConfig":"32"},{"size":234,"mtime":1610455619110,"results":"34","hashOfConfig":"32"},{"size":4903,"mtime":1615550667650,"results":"35","hashOfConfig":"32"},{"size":949,"mtime":1615295119175,"results":"36","hashOfConfig":"32"},{"size":1032,"mtime":1615501109041,"results":"37","hashOfConfig":"32"},{"size":513,"mtime":1615501341874,"results":"38","hashOfConfig":"32"},{"size":1615,"mtime":1615501355007,"results":"39","hashOfConfig":"32"},{"size":17028,"mtime":1615502004381,"results":"40","hashOfConfig":"32"},{"size":1940,"mtime":1615554267442,"results":"41","hashOfConfig":"32"},{"size":4300,"mtime":1615501908545,"results":"42","hashOfConfig":"32"},{"size":250,"mtime":1612268826334,"results":"43","hashOfConfig":"32"},{"size":1744,"mtime":1615254667889,"results":"44","hashOfConfig":"32"},{"size":445,"mtime":1614085705032,"results":"45","hashOfConfig":"32"},{"size":983,"mtime":1615499238261,"results":"46","hashOfConfig":"32"},{"size":8848,"mtime":1615499441211,"results":"47","hashOfConfig":"32"},{"size":7544,"mtime":1615501882524,"results":"48","hashOfConfig":"32"},{"size":3616,"mtime":1614345438808,"results":"49","hashOfConfig":"32"},{"size":242,"mtime":1612903669413,"results":"50","hashOfConfig":"32"},{"size":748,"mtime":1612901899111,"results":"51","hashOfConfig":"32"},{"size":791,"mtime":1614948269673,"results":"52","hashOfConfig":"32"},{"size":565,"mtime":1615294555026,"results":"53","hashOfConfig":"32"},{"size":8984,"mtime":1615501958733,"results":"54","hashOfConfig":"32"},{"size":170,"mtime":1615293912488,"results":"55","hashOfConfig":"32"},{"size":703,"mtime":1615293580827,"results":"56","hashOfConfig":"32"},{"size":666,"mtime":1615499038737,"results":"57","hashOfConfig":"32"},{"size":1276,"mtime":1615500331725,"results":"58","hashOfConfig":"32"},{"size":1271,"mtime":1615500014401,"results":"59","hashOfConfig":"32"},{"size":2012,"mtime":1615554668516,"results":"60","hashOfConfig":"32"},{"size":544,"mtime":1615554645926,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"kurqm",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\jakub\\Desktop\\Projekty\\React\\admin_panel\\src\\index.js",[],["128","129"],"C:\\Users\\jakub\\Desktop\\Projekty\\React\\admin_panel\\src\\reportWebVitals.js",[],"C:\\Users\\jakub\\Desktop\\Projekty\\React\\admin_panel\\src\\store\\index.js",[],"C:\\Users\\jakub\\Desktop\\Projekty\\React\\admin_panel\\src\\reducers\\reducer.js",["130","131","132"],"C:\\Users\\jakub\\Desktop\\Projekty\\React\\admin_panel\\src\\root\\Root.js",["133"],"import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getOrders } from \"../actions\";\r\nimport { ordersCollection } from \"../firebase/firestoreUtils\";\r\nimport Router from \"../routing\";\r\nimport GlobalStyle from \"../theme/GlobalStyle\";\r\n\r\nconst Root = ({ getOrders }) => {\r\n  useEffect(() => {\r\n    const subscribe = ordersCollection.onSnapshot((snapshot) => {\r\n      const dateFromOrdersCollection = snapshot.docs.map((doc) => {\r\n        console.log(doc);\r\n        return {\r\n          orderId: doc.id,\r\n          ...doc.data(),\r\n        };\r\n      });\r\n\r\n      getOrders(dateFromOrdersCollection);\r\n    });\r\n    return () => {\r\n      subscribe();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <GlobalStyle />\r\n      <Router />\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getOrders: (orders) => dispatch(getOrders(orders)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Root);\r\n","C:\\Users\\jakub\\Desktop\\Projekty\\React\\admin_panel\\src\\routing\\index.js",["134"],"import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { setCurrentUser } from \"../actions\";\r\nimport { auth } from \"../firebase/firebaseConfig\";\r\nimport LoggedUserTemplate from \"../templates/LoggedUserTemplate\";\r\nimport UnLoggedUserTemplate from \"../templates/UnloggedUserTemplate\";\r\n\r\nconst Router = ({ currentUser, setCurrentUser }) => {\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged((user) => {\r\n      if (user) {\r\n        setCurrentUser(user);\r\n      } else {\r\n        setCurrentUser(null);\r\n      }\r\n    });\r\n  }, [currentUser]);\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      {currentUser ? <LoggedUserTemplate /> : <UnLoggedUserTemplate />}\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  currentUser: state.currentUser,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setCurrentUser: (user) => dispatch(setCurrentUser(user)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Router);\r\n","C:\\Users\\jakub\\Desktop\\Projekty\\React\\admin_panel\\src\\actions\\actionTypes.js",[],"C:\\Users\\jakub\\Desktop\\Projekty\\React\\admin_panel\\src\\actions\\index.js",[],"C:\\Users\\jakub\\Desktop\\Projekty\\React\\admin_panel\\src\\components\\OrdersTable.js",[],"C:\\Users\\jakub\\Desktop\\Projekty\\React\\admin_panel\\src\\components\\nav\\NavBar.js",["135"],"C:\\Users\\jakub\\Desktop\\Projekty\\React\\admin_panel\\src\\components\\AddProductForm.js",[],"C:\\Users\\jakub\\Desktop\\Projekty\\React\\admin_panel\\src\\data\\index.js",[],"C:\\Users\\jakub\\Desktop\\Projekty\\React\\admin_panel\\src\\components\\Modal.js",[],"C:\\Users\\jakub\\Desktop\\Projekty\\React\\admin_panel\\src\\components\\EditOrder.js",["136"],"import React from \"react\";\r\nimport OrderForm from \"./OrderForm\";\r\nimport styled from \"styled-components\";\r\nimport EditOrderForm from \"./EditOrderForm\";\r\n\r\nconst StyledH2 = styled.h2`\r\n  margin-bottom: 1rem;\r\n\r\n  text-align: center;\r\n`;\r\n\r\nconst EditOrder = ({ handleClose }) => {\r\n  return (\r\n    <div>\r\n      <StyledH2>Edit Order</StyledH2>\r\n      <EditOrderForm handleClose={handleClose} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditOrder;\r\n","C:\\Users\\jakub\\Desktop\\Projekty\\React\\admin_panel\\src\\views\\AddOrder.js",[],"C:\\Users\\jakub\\Desktop\\Projekty\\React\\admin_panel\\src\\components\\OrderForm.js",["137"],"import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport \"date-fns\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport moment from \"moment\";\r\nimport { editOrder } from \"../actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport { addOrder } from \"../firebase/firestoreUtils\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      minWidth: \"25ch\",\r\n    },\r\n  },\r\n  // root: {\r\n  //   flexGrow: 1,\r\n  // },\r\n  formControl: {\r\n    margin: theme.spacing(0),\r\n    minWidth: 210,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst OrderForm = ({ orderFormType, editOrder, handleClose }) => {\r\n  const classes = useStyles();\r\n  const [selectedPaymentDate, setSelectedPaymentDate] = useState(new Date());\r\n  const [selectedDeliveryDate, setSelectedDeliveryDate] = useState(new Date());\r\n  const [currency, setCurrency] = useState(\"\");\r\n  const [priority, setPriority] = useState(\"\");\r\n  const [paid, setPaid] = useState(\"false\");\r\n  const [pamentDateVisible, setPamentDateVisible] = useState(false);\r\n  const [redirect, setRedirect] = useState(false);\r\n\r\n  const handlePaidChange = (e) => {\r\n    setPaid(e.target.value);\r\n    console.log(paid);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setPamentDateVisible(!pamentDateVisible);\r\n  }, [paid]);\r\n\r\n  const handleCurrencyChange = (event) => {\r\n    setCurrency(event.target.value);\r\n  };\r\n\r\n  const handlePriorityChange = (event) => {\r\n    setPriority(event.target.value);\r\n  };\r\n\r\n  const handlePaymentDateChange = (date) => {\r\n    setSelectedPaymentDate(date);\r\n  };\r\n\r\n  const handleDeliveryDateChange = (date) => {\r\n    setSelectedDeliveryDate(date);\r\n  };\r\n\r\n  const handleOrderForm = (e) => {\r\n    e.preventDefault();\r\n\r\n    const formattedPaymentDate = moment(selectedPaymentDate).format(\r\n      \"yyyy/MM/DD\"\r\n    );\r\n    const formattedDeliveryDate = moment(selectedDeliveryDate).format(\r\n      \"yyyy/MM/DD\"\r\n    );\r\n\r\n    const formatedPriority =\r\n      priority === \"high\" ? \"c\" : priority === \"mid\" ? \"b\" : \"a\";\r\n\r\n    const clientName = e.target.clientName.value;\r\n\r\n    if (orderFormType === \"addOrder\") {\r\n      const newOrder = {\r\n        clientName,\r\n        payment: 0,\r\n        currency,\r\n        paid,\r\n        priority: formatedPriority,\r\n        paymentDate: formattedPaymentDate,\r\n        deliveryDate: formattedDeliveryDate,\r\n        products: [],\r\n      };\r\n\r\n      addOrder(newOrder);\r\n      setRedirect(true);\r\n    } else {\r\n      const editedOrder = {\r\n        clientName,\r\n        currency,\r\n        paid,\r\n        priority: formatedPriority,\r\n        paymentDate: formattedPaymentDate,\r\n        deliveryDate: formattedDeliveryDate,\r\n      };\r\n      editOrder(editedOrder);\r\n      handleClose();\r\n    }\r\n\r\n    e.target.reset();\r\n    setCurrency(\"\");\r\n    setPriority(\"\");\r\n    setSelectedPaymentDate(new Date());\r\n    setSelectedDeliveryDate(new Date());\r\n  };\r\n  return (\r\n    <>\r\n      <div>\r\n        <form onSubmit={handleOrderForm}>\r\n          <Grid\r\n            container\r\n            justify=\"center\"\r\n            direction=\"column\"\r\n            spacing={3}\r\n            alignItems=\"center\"\r\n          >\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                id=\"outlined-basic\"\r\n                name=\"clientName\"\r\n                label=\"Client Name\"\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                  Currency\r\n                </InputLabel>\r\n\r\n                <Select\r\n                  labelId=\"demo-simple-select-outlined-label\"\r\n                  id=\"demo-simple-select-outlined\"\r\n                  value={currency}\r\n                  onChange={handleCurrencyChange}\r\n                  label=\"Currency\"\r\n                >\r\n                  <MenuItem value=\"usd\">USD</MenuItem>\r\n                  <MenuItem value=\"eur\">EUR</MenuItem>\r\n                  <MenuItem value=\"pln\">PLN</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                  Priority\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-outlined-label\"\r\n                  id=\"demo-simple-select-outlined\"\r\n                  value={priority}\r\n                  onChange={handlePriorityChange}\r\n                  label=\"Priority\"\r\n                >\r\n                  <MenuItem value=\"low\">Low</MenuItem>\r\n                  <MenuItem value=\"mid\">Mid</MenuItem>\r\n                  <MenuItem value=\"high\">High</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormControl component=\"fieldset\">\r\n                <FormLabel component=\"legend\">Paid</FormLabel>\r\n\r\n                <RadioGroup\r\n                  aria-label=\"paid\"\r\n                  name=\"paid\"\r\n                  value={paid}\r\n                  onChange={handlePaidChange}\r\n                  row\r\n                >\r\n                  <FormControlLabel\r\n                    value={\"true\"}\r\n                    control={<Radio />}\r\n                    label=\"Yes\"\r\n                  />\r\n                  <FormControlLabel\r\n                    value={\"false\"}\r\n                    control={<Radio />}\r\n                    label=\"No\"\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              {pamentDateVisible ? (\r\n                <Grid item xs={12}>\r\n                  <KeyboardDatePicker\r\n                    margin=\"normal\"\r\n                    id=\"date-picker-dialog\"\r\n                    label=\"Delivery date\"\r\n                    format=\"dd/MM/yyyy\"\r\n                    value={selectedDeliveryDate}\r\n                    onChange={handleDeliveryDateChange}\r\n                    KeyboardButtonProps={{\r\n                      \"aria-label\": \"change date\",\r\n                    }}\r\n                  />\r\n                </Grid>\r\n              ) : (\r\n                <>\r\n                  <Grid item xs={12}>\r\n                    <KeyboardDatePicker\r\n                      margin=\"normal\"\r\n                      id=\"date-picker-dialog\"\r\n                      label=\"Payment date\"\r\n                      format=\"dd/MM/yyyy\"\r\n                      value={selectedPaymentDate}\r\n                      onChange={handlePaymentDateChange}\r\n                      KeyboardButtonProps={{\r\n                        \"aria-label\": \"change date\",\r\n                      }}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <KeyboardDatePicker\r\n                      margin=\"normal\"\r\n                      id=\"date-picker-dialog\"\r\n                      label=\"Delivery date\"\r\n                      format=\"dd/MM/yyyy\"\r\n                      value={selectedDeliveryDate}\r\n                      onChange={handleDeliveryDateChange}\r\n                      KeyboardButtonProps={{\r\n                        \"aria-label\": \"change date\",\r\n                      }}\r\n                    />\r\n                  </Grid>\r\n                </>\r\n              )}\r\n            </MuiPickersUtilsProvider>\r\n            <Grid item xs={12}>\r\n              <Button type=\"submit\" variant=\"outlined\">\r\n                {orderFormType === \"addOrder\" ? \"Add\" : \"Save\"}\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n        {redirect ? <Redirect to=\"/orders-table\" /> : null}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  editOrder: (editedOrder) => dispatch(editOrder(editedOrder)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(OrderForm);\r\n","C:\\Users\\jakub\\Desktop\\Projekty\\React\\admin_panel\\src\\components\\productsComponents\\DisplayProductsOrder.js",[],"C:\\Users\\jakub\\Desktop\\Projekty\\React\\admin_panel\\src\\components\\productsComponents\\EditProductKeyForm.js",[],"C:\\Users\\jakub\\Desktop\\Projekty\\React\\admin_panel\\src\\theme\\GlobalStyle.js",[],"C:\\Users\\jakub\\Desktop\\Projekty\\React\\admin_panel\\src\\views\\Orders.js",[],"C:\\Users\\jakub\\Desktop\\Projekty\\React\\admin_panel\\src\\firebase\\firestoreUtils.js",[],"C:\\Users\\jakub\\Desktop\\Projekty\\React\\admin_panel\\src\\firebase\\firebaseConfig.js",[],"C:\\Users\\jakub\\Desktop\\Projekty\\React\\admin_panel\\src\\components\\EditOrderForm.js",["138"],"import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport \"date-fns\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport moment from \"moment\";\r\nimport { openModal } from \"../actions\";\r\nimport { connect } from \"react-redux\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\n\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport { editOrderFirebase } from \"../firebase/firestoreUtils\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      minWidth: \"25ch\",\r\n    },\r\n  },\r\n\r\n  formControl: {\r\n    margin: theme.spacing(0),\r\n    minWidth: 210,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst EditOrderForm = ({ selectedOrder, closeModal }) => {\r\n  const {\r\n    clientName,\r\n    currency,\r\n    priority,\r\n    paid,\r\n    deliveryDate,\r\n    paymentDate,\r\n  } = selectedOrder;\r\n\r\n  const classes = useStyles();\r\n\r\n  const arrayOfDateToDisplay = paymentDate.split(\"/\");\r\n  arrayOfDateToDisplay.reverse();\r\n\r\n  const paymentMonth = parseInt(arrayOfDateToDisplay[1]) - 1;\r\n\r\n  const dateToDisplay = new Date(\r\n    arrayOfDateToDisplay[2],\r\n    `${paymentMonth}`,\r\n    arrayOfDateToDisplay[0]\r\n  );\r\n\r\n  const arrayOfDateToDisplay2 = deliveryDate.split(\"/\");\r\n  arrayOfDateToDisplay2.reverse();\r\n\r\n  const deliveryMonth = parseInt(arrayOfDateToDisplay2[1]) - 1;\r\n\r\n  const dateToDisplay2 = new Date(\r\n    arrayOfDateToDisplay2[2],\r\n    `${deliveryMonth}`,\r\n    arrayOfDateToDisplay2[0]\r\n  );\r\n\r\n  console.log(priority);\r\n\r\n  const [newSelectedPaymentDate, setNewSelectedPaymentDate] = useState(\r\n    dateToDisplay\r\n  );\r\n  const [newSelectedDeliveryDate, setNewSelectedDeliveryDate] = useState(\r\n    dateToDisplay2\r\n  );\r\n  const [newClientName, setNewClientName] = useState(clientName);\r\n  const [newCurrency, setNewCurrency] = useState(currency);\r\n  const [newPriority, setNewPriority] = useState(priority);\r\n  const [newPaid, setNewPaid] = useState(paid);\r\n  const handlePaidChange = (e) => {\r\n    setNewPaid(e.target.value);\r\n    console.log(paid);\r\n  };\r\n\r\n  const handleCurrencyChange = (event) => {\r\n    setNewCurrency(event.target.value);\r\n  };\r\n\r\n  const handlePriorityChange = (event) => {\r\n    setNewPriority(event.target.value);\r\n  };\r\n\r\n  const handleClientNameChange = (event) => {\r\n    setNewClientName(event.target.value);\r\n  };\r\n\r\n  const handlePaymentDateChange = (date) => {\r\n    setNewSelectedPaymentDate(date);\r\n  };\r\n\r\n  const handleDeliveryDateChange = (date) => {\r\n    setNewSelectedDeliveryDate(date);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const formattedPaymentDate = moment(newSelectedPaymentDate).format(\r\n      \"yyyy/MM/DD\"\r\n    );\r\n    const formattedDeliveryDate = moment(newSelectedDeliveryDate).format(\r\n      \"yyyy/MM/DD\"\r\n    );\r\n\r\n    const order = {\r\n      clientName: newClientName,\r\n      currency: newCurrency,\r\n      priority: newPriority,\r\n      paid: newPaid,\r\n      paymentDate: formattedPaymentDate,\r\n      deliveryDate: formattedDeliveryDate,\r\n    };\r\n\r\n    editOrderFirebase(selectedOrder.orderId, order);\r\n    closeModal(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <form onSubmit={handleSubmit}>\r\n          <Grid\r\n            container\r\n            justify=\"center\"\r\n            direction=\"column\"\r\n            spacing={3}\r\n            alignItems=\"center\"\r\n          >\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                id=\"outlined-basic\"\r\n                name=\"clientName\"\r\n                label=\"Client Name\"\r\n                value={newClientName}\r\n                onChange={handleClientNameChange}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                  Currency\r\n                </InputLabel>\r\n\r\n                <Select\r\n                  labelId=\"demo-simple-select-outlined-label\"\r\n                  id=\"demo-simple-select-outlined\"\r\n                  value={newCurrency}\r\n                  onChange={handleCurrencyChange}\r\n                  label=\"Currency\"\r\n                >\r\n                  <MenuItem value=\"usd\">USD</MenuItem>\r\n                  <MenuItem value=\"eur\">EUR</MenuItem>\r\n                  <MenuItem value=\"pln\">PLN</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                  Priority\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-outlined-label\"\r\n                  id=\"demo-simple-select-outlined\"\r\n                  value={newPriority}\r\n                  onChange={handlePriorityChange}\r\n                  label=\"Priority\"\r\n                >\r\n                  <MenuItem value=\"a\">Low</MenuItem>\r\n                  <MenuItem value=\"b\">Mid</MenuItem>\r\n                  <MenuItem value=\"c\">High</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormControl component=\"fieldset\">\r\n                <FormLabel component=\"legend\">Paid</FormLabel>\r\n\r\n                <RadioGroup\r\n                  aria-label=\"paid\"\r\n                  name=\"paid\"\r\n                  value={newPaid}\r\n                  onChange={handlePaidChange}\r\n                  row\r\n                >\r\n                  <FormControlLabel\r\n                    value={\"true\"}\r\n                    control={<Radio />}\r\n                    label=\"Yes\"\r\n                  />\r\n                  <FormControlLabel\r\n                    value={\"false\"}\r\n                    control={<Radio />}\r\n                    label=\"No\"\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              {newPaid === \"true\" ? (\r\n                <>\r\n                  <Grid item xs={12}>\r\n                    <KeyboardDatePicker\r\n                      margin=\"normal\"\r\n                      id=\"date-picker-dialog\"\r\n                      label=\"Payment date\"\r\n                      format=\"dd/MM/yyyy\"\r\n                      value={newSelectedPaymentDate}\r\n                      onChange={handlePaymentDateChange}\r\n                      KeyboardButtonProps={{\r\n                        \"aria-label\": \"change date\",\r\n                      }}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <KeyboardDatePicker\r\n                      margin=\"normal\"\r\n                      id=\"date-picker-dialog\"\r\n                      label=\"Delivery date\"\r\n                      format=\"dd/MM/yyyy\"\r\n                      value={newSelectedDeliveryDate}\r\n                      onChange={handleDeliveryDateChange}\r\n                      KeyboardButtonProps={{\r\n                        \"aria-label\": \"change date\",\r\n                      }}\r\n                    />\r\n                  </Grid>\r\n                </>\r\n              ) : (\r\n                <Grid item xs={12}>\r\n                  <KeyboardDatePicker\r\n                    margin=\"normal\"\r\n                    id=\"date-picker-dialog\"\r\n                    label=\"Delivery date\"\r\n                    format=\"dd/MM/yyyy\"\r\n                    value={newSelectedDeliveryDate}\r\n                    onChange={handleDeliveryDateChange}\r\n                    KeyboardButtonProps={{\r\n                      \"aria-label\": \"change date\",\r\n                    }}\r\n                  />\r\n                </Grid>\r\n              )}\r\n            </MuiPickersUtilsProvider>\r\n            <Grid item xs={12}>\r\n              <Button type=\"submit\" variant=\"outlined\">\r\n                Save\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  selectedOrder: state.selectedOrder,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  closeModal: (openState) => dispatch(openModal(openState)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditOrderForm);\r\n","C:\\Users\\jakub\\Desktop\\Projekty\\React\\admin_panel\\src\\routes\\index.js",[],"C:\\Users\\jakub\\Desktop\\Projekty\\React\\admin_panel\\src\\templates\\LoggedUserTemplate.js",[],"C:\\Users\\jakub\\Desktop\\Projekty\\React\\admin_panel\\src\\templates\\UnloggedUserTemplate.js",[],"C:\\Users\\jakub\\Desktop\\Projekty\\React\\admin_panel\\src\\views\\RegisterPage.js",[],"C:\\Users\\jakub\\Desktop\\Projekty\\React\\admin_panel\\src\\views\\LoginPage.js",[],"C:\\Users\\jakub\\Desktop\\Projekty\\React\\admin_panel\\src\\components\\RegisterLoginForm.js",["139"],"C:\\Users\\jakub\\Desktop\\Projekty\\React\\admin_panel\\src\\hoc\\withRedirect.js",[],{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","severity":1,"message":"145","line":129,"column":13,"nodeType":"146","messageId":"147","endLine":129,"endColumn":34},{"ruleId":"148","severity":1,"message":"149","line":129,"column":59,"nodeType":"150","messageId":"151","endLine":129,"endColumn":61},{"ruleId":"152","severity":1,"message":"153","line":134,"column":5,"nodeType":"154","messageId":"155","endLine":141,"endColumn":9},{"ruleId":"156","severity":1,"message":"157","line":24,"column":6,"nodeType":"158","endLine":24,"endColumn":8,"suggestions":"159"},{"ruleId":"156","severity":1,"message":"160","line":18,"column":6,"nodeType":"158","endLine":18,"endColumn":19,"suggestions":"161"},{"ruleId":"144","severity":1,"message":"162","line":1,"column":17,"nodeType":"146","messageId":"147","endLine":1,"endColumn":25},{"ruleId":"144","severity":1,"message":"163","line":2,"column":8,"nodeType":"146","messageId":"147","endLine":2,"endColumn":17},{"ruleId":"156","severity":1,"message":"164","line":62,"column":6,"nodeType":"158","endLine":62,"endColumn":12,"suggestions":"165"},{"ruleId":"144","severity":1,"message":"166","line":1,"column":17,"nodeType":"146","messageId":"147","endLine":1,"endColumn":26},{"ruleId":"144","severity":1,"message":"162","line":2,"column":17,"nodeType":"146","messageId":"147","endLine":2,"endColumn":25},"no-native-reassign",["167"],"no-negated-in-lhs",["168"],"no-unused-vars","'orderAfterEditProduct' is assigned a value but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getOrders'. Either include it or remove the dependency array. If 'getOrders' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["169"],"React Hook useEffect has a missing dependency: 'setCurrentUser'. Either include it or remove the dependency array. If 'setCurrentUser' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["170"],"'useState' is defined but never used.","'OrderForm' is defined but never used.","React Hook useEffect has a missing dependency: 'pamentDateVisible'. Either include it or remove the dependency array. You can also do a functional update 'setPamentDateVisible(p => ...)' if you only need 'pamentDateVisible' in the 'setPamentDateVisible' call.",["171"],"'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},"Update the dependencies array to be: [getOrders]",{"range":"178","text":"179"},"Update the dependencies array to be: [currentUser, setCurrentUser]",{"range":"180","text":"181"},"Update the dependencies array to be: [paid, pamentDateVisible]",{"range":"182","text":"183"},[695,697],"[getOrders]",[609,622],"[currentUser, setCurrentUser]",[2096,2102],"[paid, pamentDateVisible]"]